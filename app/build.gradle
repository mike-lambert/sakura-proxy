import com.android.build.OutputFile
apply plugin: 'com.android.application'

def keystorePropertiesFile = rootProject.file("signing.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    signingConfigs {
        config {
            keyAlias keystoreProperties["keystore.key"]
            keyPassword keystoreProperties["keystore.key.password"]
            storeFile file(keystoreProperties["keystore.file"])
            storePassword keystoreProperties["keystore.password"]
        }
    }

    sourceSets {
        main {
            //jniLibs.srcDirs 'jni'
        }
    }

    compileSdkVersion 28
    defaultConfig {
        applicationId "com.cyfrant.orchidgate"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 48
        versionName "4.0.48"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    def abiName = output.getFilter(OutputFile.ABI)
                    if (abiName == null) {
                        abiName = "universal-"
                    } else {
                        abiName = abiName + "-"
                    }
                    outputFileName = "${variant.applicationId}-${variant.name}-${abiName}${variant.versionName}.apk"
                }
            }
            signingConfig signingConfigs.config
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    def abiName = output.getFilter(OutputFile.ABI)
                    if (abiName == null) {
                        abiName = "universal-"
                    } else {
                        abiName = abiName + "-"
                    }
                    outputFileName = "${variant.applicationId}-${variant.name}-${abiName}${variant.versionName}.apk"
                }
            }
            signingConfig signingConfigs.config
        }
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    splits {
        abi {
            enable true
            reset()
            // Specifies a list of ABIs that Gradle should create APKs for.
            include "x86", "x86_64", "armeabi-v7a", "arm64-v8a"
            // Specifies that we want to also generate a universal APK that includes all ABIs.
            universalApk true
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:support-v13:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'commons-io:commons-io:2.6'
    implementation 'com.google.guava:guava:28.1-android'
    implementation project(':orbotservice')

    implementation 'com.android.support:support-v4:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

}
